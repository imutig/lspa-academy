const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function seedInterviewData() {
  try {
    console.log('üå± Ajout des donn√©es d\'entretien...')

    // Ajouter des questions d'entretien
    const questions = [
      {
        question: "Parlez-moi de votre motivation pour rejoindre notre acad√©mie de pilotage.",
        category: "INTERVIEW",
        points: 5
      },
      {
        question: "Comment g√©rez-vous le stress dans des situations critiques ?",
        category: "INTERVIEW", 
        points: 4
      },
      {
        question: "D√©crivez une situation o√π vous avez d√ª prendre une d√©cision rapide sous pression.",
        category: "INTERVIEW",
        points: 4
      },
      {
        question: "Quelles sont vos forces et faiblesses en tant que futur pilote ?",
        category: "INTERVIEW",
        points: 3
      },
      {
        question: "Comment travaillez-vous en √©quipe, notamment dans un cockpit ?",
        category: "INTERVIEW",
        points: 4
      }
    ]

    for (const questionData of questions) {
      try {
        await prisma.question.create({
          data: questionData
        })
        console.log(`‚úÖ Question ajout√©e: ${questionData.question.substring(0, 50)}...`)
      } catch (error) {
        if (error.code !== 'P2002') { // Ignorer les erreurs de doublons
          console.log(`‚ö†Ô∏è  Question d√©j√† existante: ${questionData.question.substring(0, 50)}...`)
        }
      }
    }

    console.log('‚úÖ Questions d\'entretien ajout√©es')

    // Ajouter des situations d'entretien
    const situations = [
      {
        title: "Panne moteur en vol",
        description: "Vous √™tes aux commandes d'un avion monomoteur √† 3000 pieds d'altitude lorsque le moteur tombe soudainement en panne. L'a√©roport le plus proche est √† 10 km. Que faites-vous ?",
        expectedBehavior: "Garder son calme, √©tablir la meilleure vitesse de plan√©, identifier un terrain d'atterrissage d'urgence, suivre les proc√©dures d'urgence, communiquer avec le contr√¥le",
        difficulty: "HIGH",
        category: "EMERGENCY",
        createdBy: "system"
      },
      {
        title: "Conditions m√©t√©orologiques d√©grad√©es",
        description: "Vous approchez de votre destination mais la m√©t√©o s'est d√©grad√©e avec une visibilit√© r√©duite √† 1500m et un plafond nuageux bas. Vos r√©serves de carburant sont limit√©es.",
        expectedBehavior: "√âvaluer les conditions r√©elles, consid√©rer un d√©routement, respecter les minimums m√©t√©o, prendre une d√©cision √©clair√©e sur la poursuite ou l'abandon de l'approche",
        difficulty: "MEDIUM",
        category: "WEATHER",
        createdBy: "system"
      },
      {
        title: "Conflit avec un passager difficile",
        description: "Un passager refuse de respecter les consignes de s√©curit√© et devient agressif envers l'√©quipage. La situation perturbe les autres passagers et cr√©e une tension √† bord.",
        expectedBehavior: "Rester calme et professionnel, d√©samorcer la situation, faire appliquer les r√®gles de s√©curit√©, informer le commandant de bord, documenter l'incident",
        difficulty: "MEDIUM", 
        category: "PASSENGER_RELATIONS",
        createdBy: "system"
      },
      {
        title: "Dysfonctionnement des instruments",
        description: "En vol, vous remarquez que plusieurs instruments principaux affichent des valeurs incoh√©rentes. Vous suspectez un probl√®me √©lectrique ou de pitot statique.",
        expectedBehavior: "Identifier les instruments fiables, utiliser les instruments de secours, suivre les proc√©dures de panne, maintenir le contr√¥le de l'a√©ronef, d√©clarer une urgence si n√©cessaire",
        difficulty: "HIGH",
        category: "TECHNICAL",
        createdBy: "system"
      },
      {
        title: "Gestion d'√©quipe en situation critique",
        description: "Vous √™tes commandant de bord et votre copilote commet une erreur importante lors d'une approche difficile. Comment g√©rez-vous cette situation ?",
        expectedBehavior: "Corriger imm√©diatement l'erreur, reprendre les commandes si n√©cessaire, communiquer clairement, debriefing post-vol constructif, maintenir la s√©curit√© avant tout",
        difficulty: "HIGH",
        category: "LEADERSHIP", 
        createdBy: "system"
      }
    ]

    for (const situationData of situations) {
      try {
        await prisma.situation.create({
          data: situationData
        })
        console.log(`‚úÖ Situation ajout√©e: ${situationData.title}`)
      } catch (error) {
        if (error.code !== 'P2002') { // Ignorer les erreurs de doublons
          console.log(`‚ö†Ô∏è  Situation d√©j√† existante: ${situationData.title}`)
        }
      }
    }

    console.log('‚úÖ Situations d\'entretien ajout√©es')
    console.log('üéâ Donn√©es d\'entretien seed√©es avec succ√®s !')

  } catch (error) {
    console.error('‚ùå Erreur lors du seeding:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedInterviewData()
